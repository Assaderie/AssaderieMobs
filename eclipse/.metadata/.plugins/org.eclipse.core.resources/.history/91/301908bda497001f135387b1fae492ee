package fr.assaderie.mobs.render;

import org.lwjgl.opengl.GL11;

import fr.assaderie.mobs.entity.ZombieWolfEntity;
import fr.assaderie.mobs.models.CustomModelWolf;
import fr.assaderie.mobs.utils.TexturesZombie;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.client.renderer.entity.RenderLiving;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLiving;

public class RenderWolf extends RenderLiving {

    private CustomModelWolf wolfModel;
    
    public RenderWolf() {
        super(new CustomModelWolf(), 0.5F);
        this.wolfModel = (CustomModelWolf) super.mainModel;
        this.setRenderPassModel(this.wolfModel);    
    }
    
    /**
     * Render the glowing eyes of the zombie wolf.
     */
    protected int renderEyes(ZombieWolfEntity zombieWolfEntity, int pass, float partialTickTime) {
        if (pass != 0) {
            return -1;
        } else {
            this.loadTexture(TexturesZombie.TEXTURES_ZOMBIE_WOLF_EYES);
            GL11.glEnable(GL11.GL_BLEND);
            GL11.glDisable(GL11.GL_ALPHA_TEST);
            GL11.glBlendFunc(GL11.GL_ONE, GL11.GL_ONE);
            GL11.glDisable(GL11.GL_LIGHTING);
            
            // Set depth mask based on potion effect
            if (zombieWolfEntity.getHasActivePotion()) {
                GL11.glDepthMask(false);
            } else {
                GL11.glDepthMask(true);
            }

            // Set lightmap texture coordinates to make the eyes glow
            char brightness = 61680;
            int u = brightness % 65536;
            int v = brightness / 65536;
            OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, (float)u / 1.0F, (float)v / 1.0F);

            // Set eye color to bright white
            GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
            GL11.glEnable(GL11.GL_LIGHTING);
            GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
            return 1;
        }
    }
    
    /**
     * Determines which render pass to use (eye pass or standard).
     */
    protected int shouldRenderPass(EntityLiving entity, int pass, float partialTickTime) {
        return this.renderEyes((ZombieWolfEntity)entity, pass, partialTickTime);
    }

    /**
     * Standard render method for living entities, adapted for zombie wolf.
     */
    public void doRender(Entity entity, double x, double y, double z, float entityYaw, float partialTicks) {
        this.renderWolf((ZombieWolfEntity) entity, x, y, z, entityYaw, partialTicks);
    }

    /**
     * Main render method for the zombie wolf.
     */
    public void renderWolf(ZombieWolfEntity zombieWolfEntity, double x, double y, double z, float entityYaw, float partialTicks) {
        super.doRender(zombieWolfEntity, x, y, z, entityYaw, partialTicks);
    }
}
